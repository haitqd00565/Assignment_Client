//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Assignment_Client.UserServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Assignment_WebService")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((this.PhoneField.Equals(value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Comment", Namespace="http://schemas.datacontract.org/2004/07/Assignment_WebService")]
    [System.SerializableAttribute()]
    public partial class Comment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Comment1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlaceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment1 {
            get {
                return this.Comment1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Comment1Field, value) != true)) {
                    this.Comment1Field = value;
                    this.RaisePropertyChanged("Comment1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlaceId {
            get {
                return this.PlaceIdField;
            }
            set {
                if ((this.PlaceIdField.Equals(value) != true)) {
                    this.PlaceIdField = value;
                    this.RaisePropertyChanged("PlaceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubComment", Namespace="http://schemas.datacontract.org/2004/07/Assignment_WebService")]
    [System.SerializableAttribute()]
    public partial class SubComment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CommentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CommentId {
            get {
                return this.CommentIdField;
            }
            set {
                if ((this.CommentIdField.Equals(value) != true)) {
                    this.CommentIdField = value;
                    this.RaisePropertyChanged("CommentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserServiceReference.IClientService")]
    public interface IClientService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddClient", ReplyAction="http://tempuri.org/IClientService/AddClientResponse")]
        bool AddClient(Assignment_Client.UserServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddClient", ReplyAction="http://tempuri.org/IClientService/AddClientResponse")]
        System.Threading.Tasks.Task<bool> AddClientAsync(Assignment_Client.UserServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetByEmail", ReplyAction="http://tempuri.org/IClientService/GetByEmailResponse")]
        Assignment_Client.UserServiceReference.User GetByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetByEmail", ReplyAction="http://tempuri.org/IClientService/GetByEmailResponse")]
        System.Threading.Tasks.Task<Assignment_Client.UserServiceReference.User> GetByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/LoginClient", ReplyAction="http://tempuri.org/IClientService/LoginClientResponse")]
        bool LoginClient(Assignment_Client.UserServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/LoginClient", ReplyAction="http://tempuri.org/IClientService/LoginClientResponse")]
        System.Threading.Tasks.Task<bool> LoginClientAsync(Assignment_Client.UserServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddComment", ReplyAction="http://tempuri.org/IClientService/AddCommentResponse")]
        bool AddComment(Assignment_Client.UserServiceReference.Comment comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddComment", ReplyAction="http://tempuri.org/IClientService/AddCommentResponse")]
        System.Threading.Tasks.Task<bool> AddCommentAsync(Assignment_Client.UserServiceReference.Comment comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddSubComment", ReplyAction="http://tempuri.org/IClientService/AddSubCommentResponse")]
        bool AddSubComment(Assignment_Client.UserServiceReference.SubComment subComment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddSubComment", ReplyAction="http://tempuri.org/IClientService/AddSubCommentResponse")]
        System.Threading.Tasks.Task<bool> AddSubCommentAsync(Assignment_Client.UserServiceReference.SubComment subComment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetCommentList", ReplyAction="http://tempuri.org/IClientService/GetCommentListResponse")]
        Assignment_Client.UserServiceReference.Comment[] GetCommentList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetCommentList", ReplyAction="http://tempuri.org/IClientService/GetCommentListResponse")]
        System.Threading.Tasks.Task<Assignment_Client.UserServiceReference.Comment[]> GetCommentListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetCommentListById", ReplyAction="http://tempuri.org/IClientService/GetCommentListByIdResponse")]
        Assignment_Client.UserServiceReference.Comment[] GetCommentListById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetCommentListById", ReplyAction="http://tempuri.org/IClientService/GetCommentListByIdResponse")]
        System.Threading.Tasks.Task<Assignment_Client.UserServiceReference.Comment[]> GetCommentListByIdAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientServiceChannel : Assignment_Client.UserServiceReference.IClientService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientServiceClient : System.ServiceModel.ClientBase<Assignment_Client.UserServiceReference.IClientService>, Assignment_Client.UserServiceReference.IClientService {
        
        public ClientServiceClient() {
        }
        
        public ClientServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddClient(Assignment_Client.UserServiceReference.User user) {
            return base.Channel.AddClient(user);
        }
        
        public System.Threading.Tasks.Task<bool> AddClientAsync(Assignment_Client.UserServiceReference.User user) {
            return base.Channel.AddClientAsync(user);
        }
        
        public Assignment_Client.UserServiceReference.User GetByEmail(string email) {
            return base.Channel.GetByEmail(email);
        }
        
        public System.Threading.Tasks.Task<Assignment_Client.UserServiceReference.User> GetByEmailAsync(string email) {
            return base.Channel.GetByEmailAsync(email);
        }
        
        public bool LoginClient(Assignment_Client.UserServiceReference.User user) {
            return base.Channel.LoginClient(user);
        }
        
        public System.Threading.Tasks.Task<bool> LoginClientAsync(Assignment_Client.UserServiceReference.User user) {
            return base.Channel.LoginClientAsync(user);
        }
        
        public bool AddComment(Assignment_Client.UserServiceReference.Comment comment) {
            return base.Channel.AddComment(comment);
        }
        
        public System.Threading.Tasks.Task<bool> AddCommentAsync(Assignment_Client.UserServiceReference.Comment comment) {
            return base.Channel.AddCommentAsync(comment);
        }
        
        public bool AddSubComment(Assignment_Client.UserServiceReference.SubComment subComment) {
            return base.Channel.AddSubComment(subComment);
        }
        
        public System.Threading.Tasks.Task<bool> AddSubCommentAsync(Assignment_Client.UserServiceReference.SubComment subComment) {
            return base.Channel.AddSubCommentAsync(subComment);
        }
        
        public Assignment_Client.UserServiceReference.Comment[] GetCommentList() {
            return base.Channel.GetCommentList();
        }
        
        public System.Threading.Tasks.Task<Assignment_Client.UserServiceReference.Comment[]> GetCommentListAsync() {
            return base.Channel.GetCommentListAsync();
        }
        
        public Assignment_Client.UserServiceReference.Comment[] GetCommentListById(int id) {
            return base.Channel.GetCommentListById(id);
        }
        
        public System.Threading.Tasks.Task<Assignment_Client.UserServiceReference.Comment[]> GetCommentListByIdAsync(int id) {
            return base.Channel.GetCommentListByIdAsync(id);
        }
    }
}
